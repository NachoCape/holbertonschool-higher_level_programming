>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
    >>> bg = BaseGeometry()

    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("my_int", -12)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", "a")
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> BaseGeometry.area()
    Traceback (most recent call last):
    TypeError: BaseGeometry.area() missing 1 required positional argument: 'self'

    >>> BaseGeometry.integer_validator()
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

    >>> BaseGeometry.integer_validator("age")
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> BaseGeometry.integer_validator("age", 0)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> BaseGeometry.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> BaseGeometry.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> BaseGeometry.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> BaseGeometry.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer